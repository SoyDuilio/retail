"""Sync all missing columns

Revision ID: 546d54b0430c
Revises: 1bf7abd00725
Create Date: 2025-10-17 11:12:16.428169

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '546d54b0430c'
down_revision: Union[str, None] = '1bf7abd00725'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ========================================
    # CREAR TODOS LOS ENUMs NECESARIOS PRIMERO
    # ========================================
    
    # Crear ENUM para estado de pedidos
    op.execute("""
        DO $$ BEGIN
            CREATE TYPE estadopedidoenum AS ENUM (
                'PENDIENTE', 'APROBADO', 'RECHAZADO', 
                'PARCIAL', 'ENTREGADO', 'CANCELADO'
            );
        EXCEPTION
            WHEN duplicate_object THEN null;
        END $$;
    """)
    
    # Crear ENUM para tipo de venta
    op.execute("""
        DO $$ BEGIN
            CREATE TYPE tipoventaenum AS ENUM ('EXTERNA', 'INTERNA');
        EXCEPTION
            WHEN duplicate_object THEN null;
        END $$;
    """)
    
    # Crear ENUM para tipo de pago
    op.execute("""
        DO $$ BEGIN
            CREATE TYPE tipopagoenum AS ENUM ('CREDITO', 'CONTADO', 'YAPE', 'PLIN');
        EXCEPTION
            WHEN duplicate_object THEN null;
        END $$;
    """)
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('configuraciones_usuario',
    sa.Column('configuracion_id', sa.Integer(), nullable=False),
    sa.Column('vendedor_id', sa.Integer(), nullable=True),
    sa.Column('evaluador_id', sa.Integer(), nullable=True),
    sa.Column('supervisor_id', sa.Integer(), nullable=True),
    sa.Column('clave_configuracion', sa.String(length=100), nullable=False),
    sa.Column('valor_configuracion', sa.Text(), nullable=False),
    sa.Column('tipo_dato', sa.String(length=20), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('categoria', sa.String(length=50), nullable=True),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=True),
    sa.Column('fecha_modificacion', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evaluador_id'], ['evaluadores.evaluador_id'], ),
    sa.ForeignKeyConstraint(['supervisor_id'], ['supervisores.supervisor_id'], ),
    sa.ForeignKeyConstraint(['vendedor_id'], ['vendedores.vendedor_id'], ),
    sa.PrimaryKeyConstraint('configuracion_id')
    )
    op.create_index(op.f('ix_configuraciones_usuario_configuracion_id'), 'configuraciones_usuario', ['configuracion_id'], unique=False)
    op.create_table('auditoria_pedidos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pedido_id', sa.Integer(), nullable=False),
    sa.Column('accion', sa.String(length=50), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('usuario_tipo', sa.String(length=20), nullable=False),
    sa.Column('valores_anteriores', sa.Text(), nullable=True),
    sa.Column('valores_nuevos', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pedido_id'], ['pedidos.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auditoria_pedidos_accion'), 'auditoria_pedidos', ['accion'], unique=False)
    op.create_index(op.f('ix_auditoria_pedidos_id'), 'auditoria_pedidos', ['id'], unique=False)
    op.create_index(op.f('ix_auditoria_pedidos_pedido_id'), 'auditoria_pedidos', ['pedido_id'], unique=False)
    op.create_index(op.f('ix_auditoria_pedidos_timestamp'), 'auditoria_pedidos', ['timestamp'], unique=False)
    op.create_table('calificaciones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pedido_id', sa.Integer(), nullable=True),
    sa.Column('estado', sa.Enum('PENDIENTE', 'APROBADO', 'RECHAZADO', 'PARCIAL', 'ENTREGADO', 'CANCELADO', name='estadopedidoenum'), nullable=True),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pedido_id'], ['pedidos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pedido_id')
    )
    op.create_index(op.f('ix_calificaciones_id'), 'calificaciones', ['id'], unique=False)
    op.create_table('evaluaciones_pedido',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pedido_id', sa.Integer(), nullable=False),
    sa.Column('evaluador_id', sa.Integer(), nullable=False),
    sa.Column('vendedor_activo', sa.Boolean(), nullable=True),
    sa.Column('cliente_en_zona', sa.Boolean(), nullable=True),
    sa.Column('monto_dentro_limite', sa.Boolean(), nullable=True),
    sa.Column('cliente_no_moroso', sa.Boolean(), nullable=True),
    sa.Column('resultado', sa.String(length=20), nullable=False),
    sa.Column('motivo_rechazo', sa.Text(), nullable=True),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.Column('fecha_evaluacion', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evaluador_id'], ['evaluadores.evaluador_id'], ),
    sa.ForeignKeyConstraint(['pedido_id'], ['pedidos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('precios')
    op.create_foreign_key(None, 'alertas_stock', 'productos', ['producto_id'], ['id'])
    op.create_foreign_key(None, 'asignaciones_segmento', 'clientes', ['cliente_id'], ['id'])
    op.create_index(op.f('ix_categorias_activa'), 'categorias', ['activa'], unique=False)
    op.create_index(op.f('ix_categorias_categoria_id'), 'categorias', ['categoria_id'], unique=False)
    op.drop_column('categorias', 'codigo_categoria')
    op.drop_column('categorias', 'orden_visualizacion')
    op.alter_column('clientes', 'codigo_cliente',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=50),
               nullable=True)
    op.alter_column('clientes', 'nombre_comercial',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
    op.alter_column('clientes', 'razon_social',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=200),
               existing_nullable=True)
    op.alter_column('clientes', 'ruc',
               existing_type=sa.VARCHAR(length=11),
               nullable=False)
    op.alter_column('clientes', 'telefono',
               existing_type=sa.VARCHAR(length=15),
               nullable=True)
    op.alter_column('clientes', 'email',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.alter_column('clientes', 'direccion_completa',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('clientes', 'referencia',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('clientes', 'distrito',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('clientes', 'provincia',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('clientes', 'departamento',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('clientes', 'latitud',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.DECIMAL(precision=10, scale=8),
               existing_nullable=True)
    op.alter_column('clientes', 'longitud',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.DECIMAL(precision=11, scale=8),
               existing_nullable=True)
    op.alter_column('clientes', 'precision_gps',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.DECIMAL(precision=5, scale=2),
               existing_nullable=True)
    op.alter_column('clientes', 'tipo_cliente_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('clientes', 'configuraciones',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.alter_column('clientes', 'metadatos',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.alter_column('clientes', 'deuda_actual',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.DECIMAL(precision=12, scale=2),
               existing_nullable=True,
               existing_server_default=sa.text("'0'::numeric"))
    op.alter_column('clientes', 'ultima_fecha_pago',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.drop_constraint('clientes_codigo_cliente_key', 'clientes', type_='unique')
    op.create_index(op.f('ix_clientes_activo'), 'clientes', ['activo'], unique=False)
    op.create_index(op.f('ix_clientes_codigo_cliente'), 'clientes', ['codigo_cliente'], unique=True)
    op.create_index(op.f('ix_clientes_id'), 'clientes', ['id'], unique=False)
    op.create_index(op.f('ix_clientes_latitud'), 'clientes', ['latitud'], unique=False)
    op.create_index(op.f('ix_clientes_longitud'), 'clientes', ['longitud'], unique=False)
    op.create_index(op.f('ix_clientes_ruc'), 'clientes', ['ruc'], unique=True)
    op.create_index(op.f('ix_clientes_tipo_cliente_id'), 'clientes', ['tipo_cliente_id'], unique=False)
    op.create_foreign_key(None, 'contactos_clientes', 'clientes', ['cliente_id'], ['id'])
    op.create_foreign_key(None, 'evaluaciones_crediticias', 'clientes', ['cliente_id'], ['id'])
    op.alter_column('evaluadores', 'telefono',
               existing_type=sa.VARCHAR(length=15),
               nullable=True)
    op.alter_column('evaluadores', 'direccion_trabajo',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('evaluadores', 'limite_aprobacion',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.DECIMAL(precision=12, scale=2),
               existing_nullable=True)
    op.drop_constraint('evaluadores_dni_key', 'evaluadores', type_='unique')
    op.create_index(op.f('ix_evaluadores_dni'), 'evaluadores', ['dni'], unique=True)
    op.create_foreign_key(None, 'historial_credito', 'clientes', ['cliente_id'], ['id'])
    op.create_foreign_key(None, 'movimientos_stock', 'productos', ['producto_id'], ['id'])
    op.alter_column('pedido_items', 'cantidad',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('pedido_items', 'subtotal',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.DECIMAL(precision=12, scale=2),
               existing_nullable=False)
    op.create_index(op.f('ix_pedido_items_id'), 'pedido_items', ['id'], unique=False)
    op.create_index(op.f('ix_pedido_items_pedido_id'), 'pedido_items', ['pedido_id'], unique=False)
    op.create_index(op.f('ix_pedido_items_producto_id'), 'pedido_items', ['producto_id'], unique=False)
    op.drop_constraint('pedido_items_pedido_id_fkey', 'pedido_items', type_='foreignkey')
    op.create_foreign_key(None, 'pedido_items', 'pedidos', ['pedido_id'], ['id'], ondelete='CASCADE')
    op.alter_column('pedidos', 'numero_pedido',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('pedidos', 'tipo_venta',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('EXTERNA', 'INTERNA', name='tipoventaenum'),
               existing_nullable=False)
    op.alter_column('pedidos', 'tipo_pago',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('CREDITO', 'CONTADO', 'YAPE', 'PLIN', name='tipopagoenum'),
               nullable=True)
    op.alter_column('pedidos', 'metodo_pago',
               existing_type=sa.VARCHAR(length=15),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('pedidos', 'monto_total',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.DECIMAL(precision=12, scale=2),
               existing_nullable=False)
    op.alter_column('pedidos', 'fecha_creacion',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('pedidos', 'estado',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'pendiente_aprobacion'::character varying"))
    op.drop_index('idx_pedidos_fecha', table_name='pedidos')
    op.drop_index('idx_pedidos_numero', table_name='pedidos')
    op.drop_index('idx_pedidos_tipo_venta', table_name='pedidos')
    op.drop_index('idx_pedidos_total', table_name='pedidos')
    op.drop_constraint('pedidos_numero_pedido_key', 'pedidos', type_='unique')
    op.create_index(op.f('ix_pedidos_cliente_id'), 'pedidos', ['cliente_id'], unique=False)
    op.create_index(op.f('ix_pedidos_estado'), 'pedidos', ['estado'], unique=False)
    op.create_index(op.f('ix_pedidos_fecha'), 'pedidos', ['fecha'], unique=False)
    op.create_index(op.f('ix_pedidos_fecha_creacion'), 'pedidos', ['fecha_creacion'], unique=False)
    op.create_index(op.f('ix_pedidos_id'), 'pedidos', ['id'], unique=False)
    op.create_index(op.f('ix_pedidos_numero_pedido'), 'pedidos', ['numero_pedido'], unique=True)
    op.create_index(op.f('ix_pedidos_tipo_pago'), 'pedidos', ['tipo_pago'], unique=False)
    op.create_index(op.f('ix_pedidos_tipo_venta'), 'pedidos', ['tipo_venta'], unique=False)
    op.create_index(op.f('ix_pedidos_total'), 'pedidos', ['total'], unique=False)
    op.create_index(op.f('ix_pedidos_vendedor_id'), 'pedidos', ['vendedor_id'], unique=False)
    op.drop_column('pedidos', 'longitud')
    op.drop_column('pedidos', 'codigo_pedido')
    op.drop_column('pedidos', 'aprobador_id')
    op.drop_column('pedidos', 'fecha_decision')
    op.drop_column('pedidos', 'latitud')
    op.drop_column('pedidos', 'tipo_aprobador')
    op.create_foreign_key(None, 'precios_cliente', 'productos', ['producto_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'precios_cliente', 'tipos_cliente', ['tipo_cliente_id'], ['id'])
    op.create_index(op.f('ix_productos_activo'), 'productos', ['activo'], unique=False)
    op.create_index(op.f('ix_productos_categoria_id'), 'productos', ['categoria_id'], unique=False)
    op.create_index(op.f('ix_productos_codigo_producto'), 'productos', ['codigo_producto'], unique=True)
    op.create_index(op.f('ix_productos_id'), 'productos', ['id'], unique=False)
    op.create_index(op.f('ix_productos_nombre'), 'productos', ['nombre'], unique=False)
    op.drop_column('productos', 'imagen_url')
    op.drop_column('productos', 'codigo_barras')
    op.drop_column('productos', 'peso_unitario')
    op.drop_column('productos', 'stock_minimo')
    op.drop_column('productos', 'stock_actual')
    op.drop_column('productos', 'especificaciones')
    op.drop_column('productos', 'metadatos')
    op.drop_column('productos', 'destacado')
    op.drop_column('productos', 'fecha_creacion')
    op.drop_column('productos', 'volumen_unitario')
    op.drop_column('productos', 'unidad_medida')
    op.drop_column('productos', 'fecha_modificacion')
    op.alter_column('sesiones_activas', 'dispositivo_info',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.create_index(op.f('ix_sesiones_activas_sesion_id'), 'sesiones_activas', ['sesion_id'], unique=False)
    op.alter_column('supervisores', 'permisos',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.alter_column('supervisores', 'configuraciones',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.drop_constraint('supervisores_codigo_supervisor_key', 'supervisores', type_='unique')
    op.drop_constraint('supervisores_dni_key', 'supervisores', type_='unique')
    op.create_index(op.f('ix_supervisores_codigo_supervisor'), 'supervisores', ['codigo_supervisor'], unique=True)
    op.create_index(op.f('ix_supervisores_dni'), 'supervisores', ['dni'], unique=True)
    op.create_index(op.f('ix_supervisores_email'), 'supervisores', ['email'], unique=True)
    op.create_index(op.f('ix_supervisores_supervisor_id'), 'supervisores', ['supervisor_id'], unique=False)
    op.create_unique_constraint(None, 'tipos_cliente', ['nombre'])
    op.alter_column('vendedores', 'configuraciones',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.drop_constraint('vendedores_codigo_vendedor_key', 'vendedores', type_='unique')
    op.drop_constraint('vendedores_dni_key', 'vendedores', type_='unique')
    op.create_index(op.f('ix_vendedores_codigo_vendedor'), 'vendedores', ['codigo_vendedor'], unique=True)
    op.create_index(op.f('ix_vendedores_dni'), 'vendedores', ['dni'], unique=True)
    op.create_index(op.f('ix_vendedores_email'), 'vendedores', ['email'], unique=True)
    op.create_index(op.f('ix_vendedores_vendedor_id'), 'vendedores', ['vendedor_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vendedores_vendedor_id'), table_name='vendedores')
    op.drop_index(op.f('ix_vendedores_email'), table_name='vendedores')
    op.drop_index(op.f('ix_vendedores_dni'), table_name='vendedores')
    op.drop_index(op.f('ix_vendedores_codigo_vendedor'), table_name='vendedores')
    op.create_unique_constraint('vendedores_dni_key', 'vendedores', ['dni'])
    op.create_unique_constraint('vendedores_codigo_vendedor_key', 'vendedores', ['codigo_vendedor'])
    op.alter_column('vendedores', 'configuraciones',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.drop_constraint(None, 'tipos_cliente', type_='unique')
    op.drop_index(op.f('ix_supervisores_supervisor_id'), table_name='supervisores')
    op.drop_index(op.f('ix_supervisores_email'), table_name='supervisores')
    op.drop_index(op.f('ix_supervisores_dni'), table_name='supervisores')
    op.drop_index(op.f('ix_supervisores_codigo_supervisor'), table_name='supervisores')
    op.create_unique_constraint('supervisores_dni_key', 'supervisores', ['dni'])
    op.create_unique_constraint('supervisores_codigo_supervisor_key', 'supervisores', ['codigo_supervisor'])
    op.alter_column('supervisores', 'configuraciones',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.alter_column('supervisores', 'permisos',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.drop_index(op.f('ix_sesiones_activas_sesion_id'), table_name='sesiones_activas')
    op.alter_column('sesiones_activas', 'dispositivo_info',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.add_column('productos', sa.Column('fecha_modificacion', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('productos', sa.Column('unidad_medida', sa.VARCHAR(length=20), server_default=sa.text("'unidad'::character varying"), autoincrement=False, nullable=False))
    op.add_column('productos', sa.Column('volumen_unitario', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('productos', sa.Column('fecha_creacion', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('productos', sa.Column('destacado', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.add_column('productos', sa.Column('metadatos', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True))
    op.add_column('productos', sa.Column('especificaciones', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True))
    op.add_column('productos', sa.Column('stock_actual', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('productos', sa.Column('stock_minimo', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('productos', sa.Column('peso_unitario', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('productos', sa.Column('codigo_barras', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('productos', sa.Column('imagen_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_productos_nombre'), table_name='productos')
    op.drop_index(op.f('ix_productos_id'), table_name='productos')
    op.drop_index(op.f('ix_productos_codigo_producto'), table_name='productos')
    op.drop_index(op.f('ix_productos_categoria_id'), table_name='productos')
    op.drop_index(op.f('ix_productos_activo'), table_name='productos')
    op.drop_constraint(None, 'precios_cliente', type_='foreignkey')
    op.drop_constraint(None, 'precios_cliente', type_='foreignkey')
    op.add_column('pedidos', sa.Column('tipo_aprobador', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('pedidos', sa.Column('latitud', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('pedidos', sa.Column('fecha_decision', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('pedidos', sa.Column('aprobador_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('pedidos', sa.Column('codigo_pedido', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('pedidos', sa.Column('longitud', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_pedidos_vendedor_id'), table_name='pedidos')
    op.drop_index(op.f('ix_pedidos_total'), table_name='pedidos')
    op.drop_index(op.f('ix_pedidos_tipo_venta'), table_name='pedidos')
    op.drop_index(op.f('ix_pedidos_tipo_pago'), table_name='pedidos')
    op.drop_index(op.f('ix_pedidos_numero_pedido'), table_name='pedidos')
    op.drop_index(op.f('ix_pedidos_id'), table_name='pedidos')
    op.drop_index(op.f('ix_pedidos_fecha_creacion'), table_name='pedidos')
    op.drop_index(op.f('ix_pedidos_fecha'), table_name='pedidos')
    op.drop_index(op.f('ix_pedidos_estado'), table_name='pedidos')
    op.drop_index(op.f('ix_pedidos_cliente_id'), table_name='pedidos')
    op.create_unique_constraint('pedidos_numero_pedido_key', 'pedidos', ['numero_pedido'])
    op.create_index('idx_pedidos_total', 'pedidos', ['total'], unique=False)
    op.create_index('idx_pedidos_tipo_venta', 'pedidos', ['tipo_venta'], unique=False)
    op.create_index('idx_pedidos_numero', 'pedidos', ['numero_pedido'], unique=False)
    op.create_index('idx_pedidos_fecha', 'pedidos', ['fecha'], unique=False)
    op.alter_column('pedidos', 'estado',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'pendiente_aprobacion'::character varying"))
    op.alter_column('pedidos', 'fecha_creacion',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('pedidos', 'monto_total',
               existing_type=sa.DECIMAL(precision=12, scale=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('pedidos', 'metodo_pago',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=15),
               existing_nullable=False)
    op.alter_column('pedidos', 'tipo_pago',
               existing_type=sa.Enum('CREDITO', 'CONTADO', 'YAPE', 'PLIN', name='tipopagoenum'),
               type_=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('pedidos', 'tipo_venta',
               existing_type=sa.Enum('EXTERNA', 'INTERNA', name='tipoventaenum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('pedidos', 'numero_pedido',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.drop_constraint(None, 'pedido_items', type_='foreignkey')
    op.create_foreign_key('pedido_items_pedido_id_fkey', 'pedido_items', 'pedidos', ['pedido_id'], ['id'])
    op.drop_index(op.f('ix_pedido_items_producto_id'), table_name='pedido_items')
    op.drop_index(op.f('ix_pedido_items_pedido_id'), table_name='pedido_items')
    op.drop_index(op.f('ix_pedido_items_id'), table_name='pedido_items')
    op.alter_column('pedido_items', 'subtotal',
               existing_type=sa.DECIMAL(precision=12, scale=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('pedido_items', 'cantidad',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.drop_constraint(None, 'movimientos_stock', type_='foreignkey')
    op.drop_constraint(None, 'historial_credito', type_='foreignkey')
    op.drop_index(op.f('ix_evaluadores_dni'), table_name='evaluadores')
    op.create_unique_constraint('evaluadores_dni_key', 'evaluadores', ['dni'])
    op.alter_column('evaluadores', 'limite_aprobacion',
               existing_type=sa.DECIMAL(precision=12, scale=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('evaluadores', 'direccion_trabajo',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('evaluadores', 'telefono',
               existing_type=sa.VARCHAR(length=15),
               nullable=False)
    op.drop_constraint(None, 'evaluaciones_crediticias', type_='foreignkey')
    op.drop_constraint(None, 'contactos_clientes', type_='foreignkey')
    op.drop_index(op.f('ix_clientes_tipo_cliente_id'), table_name='clientes')
    op.drop_index(op.f('ix_clientes_ruc'), table_name='clientes')
    op.drop_index(op.f('ix_clientes_longitud'), table_name='clientes')
    op.drop_index(op.f('ix_clientes_latitud'), table_name='clientes')
    op.drop_index(op.f('ix_clientes_id'), table_name='clientes')
    op.drop_index(op.f('ix_clientes_codigo_cliente'), table_name='clientes')
    op.drop_index(op.f('ix_clientes_activo'), table_name='clientes')
    op.create_unique_constraint('clientes_codigo_cliente_key', 'clientes', ['codigo_cliente'])
    op.alter_column('clientes', 'ultima_fecha_pago',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('clientes', 'deuda_actual',
               existing_type=sa.DECIMAL(precision=12, scale=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True,
               existing_server_default=sa.text("'0'::numeric"))
    op.alter_column('clientes', 'metadatos',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.alter_column('clientes', 'configuraciones',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.alter_column('clientes', 'tipo_cliente_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('clientes', 'precision_gps',
               existing_type=sa.DECIMAL(precision=5, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('clientes', 'longitud',
               existing_type=sa.DECIMAL(precision=11, scale=8),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('clientes', 'latitud',
               existing_type=sa.DECIMAL(precision=10, scale=8),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('clientes', 'departamento',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('clientes', 'provincia',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('clientes', 'distrito',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('clientes', 'referencia',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
    op.alter_column('clientes', 'direccion_completa',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('clientes', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=150),
               existing_nullable=True)
    op.alter_column('clientes', 'telefono',
               existing_type=sa.VARCHAR(length=15),
               nullable=False)
    op.alter_column('clientes', 'ruc',
               existing_type=sa.VARCHAR(length=11),
               nullable=True)
    op.alter_column('clientes', 'razon_social',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=250),
               existing_nullable=True)
    op.alter_column('clientes', 'nombre_comercial',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
    op.alter_column('clientes', 'codigo_cliente',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=10),
               nullable=False)
    op.add_column('categorias', sa.Column('orden_visualizacion', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('categorias', sa.Column('codigo_categoria', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_categorias_categoria_id'), table_name='categorias')
    op.drop_index(op.f('ix_categorias_activa'), table_name='categorias')
    op.drop_constraint(None, 'asignaciones_segmento', type_='foreignkey')
    op.drop_constraint(None, 'alertas_stock', type_='foreignkey')
    op.create_table('precios',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('producto_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tipo_cliente_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('precio', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], name='precios_producto_id_fkey'),
    sa.ForeignKeyConstraint(['tipo_cliente_id'], ['tipos_cliente.id'], name='precios_tipo_cliente_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='precios_pkey')
    )
    op.drop_table('evaluaciones_pedido')
    op.drop_index(op.f('ix_calificaciones_id'), table_name='calificaciones')
    op.drop_table('calificaciones')
    op.drop_index(op.f('ix_auditoria_pedidos_timestamp'), table_name='auditoria_pedidos')
    op.drop_index(op.f('ix_auditoria_pedidos_pedido_id'), table_name='auditoria_pedidos')
    op.drop_index(op.f('ix_auditoria_pedidos_id'), table_name='auditoria_pedidos')
    op.drop_index(op.f('ix_auditoria_pedidos_accion'), table_name='auditoria_pedidos')
    op.drop_table('auditoria_pedidos')
    op.drop_index(op.f('ix_configuraciones_usuario_configuracion_id'), table_name='configuraciones_usuario')
    op.drop_table('configuraciones_usuario')
    # ### end Alembic commands ###
